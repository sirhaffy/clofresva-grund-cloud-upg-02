#cloud-config
    package_update: true
    package_upgrade: true

    # Install required packages
    packages:
    - openssh-server
    - apt-transport-https
    - software-properties-common
    - wget
    - curl
    - tar
    - jq
    - git

    write_files:
    # SSH configuration
    - path: /etc/ssh/sshd_config
        content: |
        Port 22
        PasswordAuthentication no
        PubkeyAuthentication yes
        PermitRootLogin no
        ChallengeResponseAuthentication no
        UsePAM yes
        X11Forwarding no
        PrintMotd no
        AcceptEnv LANG LC_*
        Subsystem sftp /usr/lib/openssh/sftp-server
        AllowUsers azureuser

    # Systemd service file for your application
    - path: /etc/systemd/system/dotnetapp.service
        content: |
        [Unit]
        Description=.NET Web Application
        After=network.target

        [Service]
        WorkingDirectory=/opt/${github_repo_name}
        ExecStart=/usr/bin/dotnet /opt/${github_repo_name}/${app_name}.dll
        Restart=always
        RestartSec=10
        SyslogIdentifier=dotnet-app
        User=azureuser
        Environment=ASPNETCORE_ENVIRONMENT=Production
        Environment=ASPNETCORE_URLS=http://0.0.0.0:${app_server_port}

        [Install]
        WantedBy=multi-user.target

    # GitHub Runner installation script
    - path: /home/azureuser/setup-runner.sh
        permissions: '0755'
        content: |
        #!/bin/bash

        # Create actions-runner directory
        mkdir -p /home/azureuser/actions-runner
        cd /home/azureuser/actions-runner

        # Download the latest runner package
        curl -o actions-runner-linux-x64-2.322.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.322.0/actions-runner-linux-x64-2.322.0.tar.gz

        # Validate the hash
        echo "b13b784808359f31bc79b08a191f5f83757852957dd8fe3dbfcc38202ccf5768  actions-runner-linux-x64-2.322.0.tar.gz" | shasum -a 256 -c

        # Extract the installer
        tar xzf ./actions-runner-linux-x64-2.322.0.tar.gz

        # Configure the runner
        ./config.sh --url https://github.com/${github_org}/${github_repo_name} --token ${github_token} --unattended

        # Install as a service
        sudo ./svc.sh install
        sudo ./svc.sh start

        # Output status
        sudo ./svc.sh status

        # Set proper ownership
        chown -R azureuser:azureuser /home/azureuser/actions-runner

    runcmd:
    # Set proper permissions for SSH directory
    - mkdir -p /home/azureuser/.ssh
    - chmod 700 /home/azureuser/.ssh
    - touch /home/azureuser/.ssh/authorized_keys
    - chmod 600 /home/azureuser/.ssh/authorized_keys
    - chown -R azureuser:azureuser /home/azureuser/.ssh

    # Configure SSH
    - systemctl restart ssh

    # Install .NET Core SDK and runtime
    - wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
    - dpkg -i packages-microsoft-prod.deb
    - rm packages-microsoft-prod.deb
    - apt-get update
    - apt-get install -y dotnet-sdk-9.0
    - apt-get install -y aspnetcore-runtime-9.0

    # Create application directory
    - mkdir -p /opt/${github_repo_name}
    - chown -R azureuser:azureuser /opt/${github_repo_name}

    # Run the GitHub runner setup script
    - chown azureuser:azureuser /home/azureuser/setup-runner.sh
    - sudo -u azureuser /home/azureuser/setup-runner.sh

    # Configure firewall
    - ufw allow 22/tcp
    - ufw allow ${app_server_port}/tcp
    - ufw --force enable

    # Enable the service (it will start when files are deployed)
    - systemctl enable dotnetapp.service

    # Log completion
    - echo "App server setup with GitHub runner complete" >> /var/log/cloud-init-output.log