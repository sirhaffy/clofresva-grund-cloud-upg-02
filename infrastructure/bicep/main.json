{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "4640256624888240572"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "resourceGroupName": {
      "type": "string"
    },
    "adminEmail": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "sshPublicKey": {
      "type": "string"
    },
    "appServerIp": {
      "type": "string"
    },
    "appServerPort": {
      "type": "string"
    },
    "reverseProxyIp": {
      "type": "string"
    },
    "githubOrg": {
      "type": "string"
    },
    "githubRepoName": {
      "type": "string"
    },
    "githubToken": {
      "type": "string"
    },
    "appName": {
      "type": "string"
    }
  },
  "variables": {
    "bastionCloudInit": "I2Nsb3VkLWNvbmZpZyBiYXN0aW9uIGhvc3QNCiAgICBwYWNrYWdlX3VwZGF0ZTogdHJ1ZQ0KICAgIHBhY2thZ2VfdXBncmFkZTogdHJ1ZQ0KDQogICAgIyBJbnN0YWxsIHJlcXVpcmVkIHBhY2thZ2VzDQogICAgcGFja2FnZXM6DQogICAgLSBvcGVuc3NoLXNlcnZlcg0KICAgIC0gZmFpbDJiYW4NCg0KICAgIHdyaXRlX2ZpbGVzOg0KICAgIC0gcGF0aDogL2V0Yy9zc2gvc3NoZF9jb25maWcNCiAgICAgICAgY29udGVudDogfA0KICAgICAgICBQb3J0IDIyMjINCiAgICAgICAgUGFzc3dvcmRBdXRoZW50aWNhdGlvbiBubw0KICAgICAgICBQZXJtaXRSb290TG9naW4gbm8NCiAgICAgICAgUHVia2V5QXV0aGVudGljYXRpb24geWVzDQogICAgICAgIENoYWxsZW5nZVJlc3BvbnNlQXV0aGVudGljYXRpb24gbm8NCiAgICAgICAgVXNlUEFNIHllcw0KICAgICAgICBYMTFGb3J3YXJkaW5nIG5vDQogICAgICAgIFByaW50TW90ZCBubw0KICAgICAgICBBY2NlcHRFbnYgTEFORyBMQ18qDQogICAgICAgIFN1YnN5c3RlbSBzZnRwIC91c3IvbGliL29wZW5zc2gvc2Z0cC1zZXJ2ZXINCiAgICAgICAgQWxsb3dVc2VycyBhenVyZXVzZXINCg0KICAgICMgRmFpbDJiYW4gY29uZmlndXJhdGlvbiB0byBwcm90ZWN0IFNTSA0KICAgIC0gcGF0aDogL2V0Yy9mYWlsMmJhbi9qYWlsLmxvY2FsDQogICAgICAgIGNvbnRlbnQ6IHwNCiAgICAgICAgW3NzaGRdDQogICAgICAgIGVuYWJsZWQgPSB0cnVlDQogICAgICAgIHBvcnQgPSAyMjIyDQogICAgICAgIGZpbHRlciA9IHNzaGQNCiAgICAgICAgbG9ncGF0aCA9IC92YXIvbG9nL2F1dGgubG9nDQogICAgICAgIG1heHJldHJ5ID0gNQ0KICAgICAgICBiYW50aW1lID0gMzYwMA0KDQogICAgcnVuY21kOg0KICAgICMgU2V0IHByb3BlciBwZXJtaXNzaW9ucyBmb3IgU1NIIGRpcmVjdG9yeQ0KICAgIC0gbWtkaXIgLXAgL2hvbWUvYXp1cmV1c2VyLy5zc2gNCiAgICAtIGNobW9kIDcwMCAvaG9tZS9henVyZXVzZXIvLnNzaA0KICAgIC0gdG91Y2ggL2hvbWUvYXp1cmV1c2VyLy5zc2gvYXV0aG9yaXplZF9rZXlzDQogICAgLSBjaG1vZCA2MDAgL2hvbWUvYXp1cmV1c2VyLy5zc2gvYXV0aG9yaXplZF9rZXlzDQogICAgLSBjaG93biAtUiBhenVyZXVzZXI6YXp1cmV1c2VyIC9ob21lL2F6dXJldXNlci8uc3NoDQoNCiAgICAjIFN0YXJ0IGFuZCByZXN0YXJ0IHNlcnZpY2VzDQogICAgLSBzeXN0ZW1jdGwgcmVzdGFydCBzc2gNCiAgICAtIHN5c3RlbWN0bCBlbmFibGUgZmFpbDJiYW4NCiAgICAtIHN5c3RlbWN0bCBzdGFydCBmYWlsMmJhbg0KDQogICAgIyBDb25maWd1cmUgZmlyZXdhbGwNCiAgICAtIHVmdyBhbGxvdyAyMjIyL3RjcA0KICAgIC0gdWZ3IC0tZm9yY2UgZW5hYmxlDQoNCiAgICAjIExvZyBjb21wbGV0aW9uDQogICAgLSBlY2hvICJTZWN1cml0eSBoYXJkZW5pbmcgY29tcGxldGUiID4+IC92YXIvbG9nL2Nsb3VkLWluaXQtb3V0cHV0LmxvZw==",
    "reverseProxyCloudInit": "I2Nsb3VkLWNvbmZpZyByZXZlcnNlIHByb3h5DQogICAgICAgIHBhY2thZ2VfdXBkYXRlOiB0cnVlDQogICAgICAgIHBhY2thZ2VfdXBncmFkZTogdHJ1ZQ0KDQogICAgICAgIHBhY2thZ2VzOg0KICAgICAgICAtIG5naW54DQogICAgICAgIC0gb3BlbnNzaC1zZXJ2ZXINCg0KICAgICAgICB3cml0ZV9maWxlczoNCiAgICAgICAgLSBwYXRoOiAvZXRjL25naW54L3NpdGVzLWF2YWlsYWJsZS9yZXZlcnNlLXByb3h5LmNvbmYNCiAgICAgICAgICAgIGNvbnRlbnQ6IHwNCiAgICAgICAgICAgIHNlcnZlciB7DQogICAgICAgICAgICAgICAgbGlzdGVuIDgwOw0KICAgICAgICAgICAgICAgIHNlcnZlcl9uYW1lIF87DQoNCiAgICAgICAgICAgICAgICBsb2NhdGlvbiAvIHsNCiAgICAgICAgICAgICAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vJHthcHBfc2VydmVyX2lwfToke2FwcF9zZXJ2ZXJfcG9ydH07DQogICAgICAgICAgICAgICAgICAgIHByb3h5X2h0dHBfdmVyc2lvbiAxLjE7DQogICAgICAgICAgICAgICAgICAgIHByb3h5X3NldF9oZWFkZXIgVXBncmFkZSBcJGh0dHBfdXBncmFkZTsNCiAgICAgICAgICAgICAgICAgICAgcHJveHlfc2V0X2hlYWRlciBDb25uZWN0aW9uICd1cGdyYWRlJzsNCiAgICAgICAgICAgICAgICAgICAgcHJveHlfc2V0X2hlYWRlciBIb3N0IFwkaG9zdDsNCiAgICAgICAgICAgICAgICAgICAgcHJveHlfY2FjaGVfYnlwYXNzIFwkaHR0cF91cGdyYWRlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAjIFNTSCBjb25maWd1cmF0aW9uDQogICAgICAgIC0gcGF0aDogL2V0Yy9zc2gvc3NoZF9jb25maWcNCiAgICAgICAgICAgIGNvbnRlbnQ6IHwNCiAgICAgICAgICAgIFBvcnQgMjINCiAgICAgICAgICAgIFBhc3N3b3JkQXV0aGVudGljYXRpb24gbm8NCiAgICAgICAgICAgIFB1YmtleUF1dGhlbnRpY2F0aW9uIHllcw0KICAgICAgICAgICAgUGVybWl0Um9vdExvZ2luIG5vDQogICAgICAgICAgICBDaGFsbGVuZ2VSZXNwb25zZUF1dGhlbnRpY2F0aW9uIG5vDQogICAgICAgICAgICBVc2VQQU0geWVzDQogICAgICAgICAgICBYMTFGb3J3YXJkaW5nIG5vDQogICAgICAgICAgICBQcmludE1vdGQgbm8NCiAgICAgICAgICAgIEFjY2VwdEVudiBMQU5HIExDXyoNCiAgICAgICAgICAgIFN1YnN5c3RlbSBzZnRwIC91c3IvbGliL29wZW5zc2gvc2Z0cC1zZXJ2ZXINCiAgICAgICAgICAgIEFsbG93VXNlcnMgYXp1cmV1c2VyDQoNCiAgICAgICAgcnVuY21kOg0KICAgICAgICAjIENvbmZpZ3VyZSBTU0gNCiAgICAgICAgLSBzeXN0ZW1jdGwgcmVzdGFydCBzc2gNCg0KICAgICAgICAjIENvbmZpZ3VyZSBOZ2lueCByZXZlcnNlIHByb3h5DQogICAgICAgIC0gbG4gLXNmIC9ldGMvbmdpbngvc2l0ZXMtYXZhaWxhYmxlL3JldmVyc2UtcHJveHkuY29uZiAvZXRjL25naW54L3NpdGVzLWVuYWJsZWQvDQogICAgICAgIC0gcm0gLWYgL2V0Yy9uZ2lueC9zaXRlcy1lbmFibGVkL2RlZmF1bHQNCiAgICAgICAgLSBuZ2lueCAtdCAmJiBzeXN0ZW1jdGwgcmVzdGFydCBuZ2lueA0KICAgICAgICAtIHN5c3RlbWN0bCBlbmFibGUgbmdpbngNCg0KICAgICAgICAjIENvbmZpZ3VyZSBmaXJld2FsbA0KICAgICAgICAtIHVmdyBhbGxvdyA4MC90Y3ANCiAgICAgICAgLSB1ZncgYWxsb3cgMjIvdGNwDQogICAgICAgIC0gdWZ3IC0tZm9yY2UgZW5hYmxl",
    "appServerCloudInit": "I2Nsb3VkLWNvbmZpZw0KICAgIHBhY2thZ2VfdXBkYXRlOiB0cnVlDQogICAgcGFja2FnZV91cGdyYWRlOiB0cnVlDQoNCiAgICAjIEluc3RhbGwgcmVxdWlyZWQgcGFja2FnZXMNCiAgICBwYWNrYWdlczoNCiAgICAtIG9wZW5zc2gtc2VydmVyDQogICAgLSBhcHQtdHJhbnNwb3J0LWh0dHBzDQogICAgLSBzb2Z0d2FyZS1wcm9wZXJ0aWVzLWNvbW1vbg0KICAgIC0gd2dldA0KICAgIC0gY3VybA0KICAgIC0gdGFyDQogICAgLSBqcQ0KICAgIC0gZ2l0DQoNCiAgICB3cml0ZV9maWxlczoNCiAgICAjIFNTSCBjb25maWd1cmF0aW9uDQogICAgLSBwYXRoOiAvZXRjL3NzaC9zc2hkX2NvbmZpZw0KICAgICAgICBjb250ZW50OiB8DQogICAgICAgIFBvcnQgMjINCiAgICAgICAgUGFzc3dvcmRBdXRoZW50aWNhdGlvbiBubw0KICAgICAgICBQdWJrZXlBdXRoZW50aWNhdGlvbiB5ZXMNCiAgICAgICAgUGVybWl0Um9vdExvZ2luIG5vDQogICAgICAgIENoYWxsZW5nZVJlc3BvbnNlQXV0aGVudGljYXRpb24gbm8NCiAgICAgICAgVXNlUEFNIHllcw0KICAgICAgICBYMTFGb3J3YXJkaW5nIG5vDQogICAgICAgIFByaW50TW90ZCBubw0KICAgICAgICBBY2NlcHRFbnYgTEFORyBMQ18qDQogICAgICAgIFN1YnN5c3RlbSBzZnRwIC91c3IvbGliL29wZW5zc2gvc2Z0cC1zZXJ2ZXINCiAgICAgICAgQWxsb3dVc2VycyBhenVyZXVzZXINCg0KICAgICMgU3lzdGVtZCBzZXJ2aWNlIGZpbGUgZm9yIHlvdXIgYXBwbGljYXRpb24NCiAgICAtIHBhdGg6IC9ldGMvc3lzdGVtZC9zeXN0ZW0vZG90bmV0YXBwLnNlcnZpY2UNCiAgICAgICAgY29udGVudDogfA0KICAgICAgICBbVW5pdF0NCiAgICAgICAgRGVzY3JpcHRpb249Lk5FVCBXZWIgQXBwbGljYXRpb24NCiAgICAgICAgQWZ0ZXI9bmV0d29yay50YXJnZXQNCg0KICAgICAgICBbU2VydmljZV0NCiAgICAgICAgV29ya2luZ0RpcmVjdG9yeT0vb3B0LyR7Z2l0aHViX3JlcG9fbmFtZX0NCiAgICAgICAgRXhlY1N0YXJ0PS91c3IvYmluL2RvdG5ldCAvb3B0LyR7Z2l0aHViX3JlcG9fbmFtZX0vJHthcHBfbmFtZX0uZGxsDQogICAgICAgIFJlc3RhcnQ9YWx3YXlzDQogICAgICAgIFJlc3RhcnRTZWM9MTANCiAgICAgICAgU3lzbG9nSWRlbnRpZmllcj1kb3RuZXQtYXBwDQogICAgICAgIFVzZXI9YXp1cmV1c2VyDQogICAgICAgIEVudmlyb25tZW50PUFTUE5FVENPUkVfRU5WSVJPTk1FTlQ9UHJvZHVjdGlvbg0KICAgICAgICBFbnZpcm9ubWVudD1BU1BORVRDT1JFX1VSTFM9aHR0cDovLzAuMC4wLjA6JHthcHBfc2VydmVyX3BvcnR9DQoNCiAgICAgICAgW0luc3RhbGxdDQogICAgICAgIFdhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0DQoNCiAgICAjIEdpdEh1YiBSdW5uZXIgaW5zdGFsbGF0aW9uIHNjcmlwdA0KICAgIC0gcGF0aDogL2hvbWUvYXp1cmV1c2VyL3NldHVwLXJ1bm5lci5zaA0KICAgICAgICBwZXJtaXNzaW9uczogJzA3NTUnDQogICAgICAgIGNvbnRlbnQ6IHwNCiAgICAgICAgIyEvYmluL2Jhc2gNCg0KICAgICAgICAjIENyZWF0ZSBhY3Rpb25zLXJ1bm5lciBkaXJlY3RvcnkNCiAgICAgICAgbWtkaXIgLXAgL2hvbWUvYXp1cmV1c2VyL2FjdGlvbnMtcnVubmVyDQogICAgICAgIGNkIC9ob21lL2F6dXJldXNlci9hY3Rpb25zLXJ1bm5lcg0KDQogICAgICAgICMgRG93bmxvYWQgdGhlIGxhdGVzdCBydW5uZXIgcGFja2FnZQ0KICAgICAgICBjdXJsIC1vIGFjdGlvbnMtcnVubmVyLWxpbnV4LXg2NC0yLjMyMi4wLnRhci5neiAtTCBodHRwczovL2dpdGh1Yi5jb20vYWN0aW9ucy9ydW5uZXIvcmVsZWFzZXMvZG93bmxvYWQvdjIuMzIyLjAvYWN0aW9ucy1ydW5uZXItbGludXgteDY0LTIuMzIyLjAudGFyLmd6DQoNCiAgICAgICAgIyBWYWxpZGF0ZSB0aGUgaGFzaA0KICAgICAgICBlY2hvICJiMTNiNzg0ODA4MzU5ZjMxYmM3OWIwOGExOTFmNWY4Mzc1Nzg1Mjk1N2RkOGZlM2RiZmNjMzgyMDJjY2Y1NzY4ICBhY3Rpb25zLXJ1bm5lci1saW51eC14NjQtMi4zMjIuMC50YXIuZ3oiIHwgc2hhc3VtIC1hIDI1NiAtYw0KDQogICAgICAgICMgRXh0cmFjdCB0aGUgaW5zdGFsbGVyDQogICAgICAgIHRhciB4emYgLi9hY3Rpb25zLXJ1bm5lci1saW51eC14NjQtMi4zMjIuMC50YXIuZ3oNCg0KICAgICAgICAjIENvbmZpZ3VyZSB0aGUgcnVubmVyDQogICAgICAgIC4vY29uZmlnLnNoIC0tdXJsIGh0dHBzOi8vZ2l0aHViLmNvbS8ke2dpdGh1Yl9vcmd9LyR7Z2l0aHViX3JlcG9fbmFtZX0gLS10b2tlbiAke2dpdGh1Yl90b2tlbn0gLS11bmF0dGVuZGVkDQoNCiAgICAgICAgIyBJbnN0YWxsIGFzIGEgc2VydmljZQ0KICAgICAgICBzdWRvIC4vc3ZjLnNoIGluc3RhbGwNCiAgICAgICAgc3VkbyAuL3N2Yy5zaCBzdGFydA0KDQogICAgICAgICMgT3V0cHV0IHN0YXR1cw0KICAgICAgICBzdWRvIC4vc3ZjLnNoIHN0YXR1cw0KDQogICAgICAgICMgU2V0IHByb3BlciBvd25lcnNoaXANCiAgICAgICAgY2hvd24gLVIgYXp1cmV1c2VyOmF6dXJldXNlciAvaG9tZS9henVyZXVzZXIvYWN0aW9ucy1ydW5uZXINCg0KICAgIHJ1bmNtZDoNCiAgICAjIFNldCBwcm9wZXIgcGVybWlzc2lvbnMgZm9yIFNTSCBkaXJlY3RvcnkNCiAgICAtIG1rZGlyIC1wIC9ob21lL2F6dXJldXNlci8uc3NoDQogICAgLSBjaG1vZCA3MDAgL2hvbWUvYXp1cmV1c2VyLy5zc2gNCiAgICAtIHRvdWNoIC9ob21lL2F6dXJldXNlci8uc3NoL2F1dGhvcml6ZWRfa2V5cw0KICAgIC0gY2htb2QgNjAwIC9ob21lL2F6dXJldXNlci8uc3NoL2F1dGhvcml6ZWRfa2V5cw0KICAgIC0gY2hvd24gLVIgYXp1cmV1c2VyOmF6dXJldXNlciAvaG9tZS9henVyZXVzZXIvLnNzaA0KDQogICAgIyBDb25maWd1cmUgU1NIDQogICAgLSBzeXN0ZW1jdGwgcmVzdGFydCBzc2gNCg0KICAgICMgSW5zdGFsbCAuTkVUIENvcmUgU0RLIGFuZCBydW50aW1lDQogICAgLSB3Z2V0IGh0dHBzOi8vcGFja2FnZXMubWljcm9zb2Z0LmNvbS9jb25maWcvdWJ1bnR1LzIyLjA0L3BhY2thZ2VzLW1pY3Jvc29mdC1wcm9kLmRlYiAtTyBwYWNrYWdlcy1taWNyb3NvZnQtcHJvZC5kZWINCiAgICAtIGRwa2cgLWkgcGFja2FnZXMtbWljcm9zb2Z0LXByb2QuZGViDQogICAgLSBybSBwYWNrYWdlcy1taWNyb3NvZnQtcHJvZC5kZWINCiAgICAtIGFwdC1nZXQgdXBkYXRlDQogICAgLSBhcHQtZ2V0IGluc3RhbGwgLXkgZG90bmV0LXNkay05LjANCiAgICAtIGFwdC1nZXQgaW5zdGFsbCAteSBhc3BuZXRjb3JlLXJ1bnRpbWUtOS4wDQoNCiAgICAjIENyZWF0ZSBhcHBsaWNhdGlvbiBkaXJlY3RvcnkNCiAgICAtIG1rZGlyIC1wIC9vcHQvJHtnaXRodWJfcmVwb19uYW1lfQ0KICAgIC0gY2hvd24gLVIgYXp1cmV1c2VyOmF6dXJldXNlciAvb3B0LyR7Z2l0aHViX3JlcG9fbmFtZX0NCg0KICAgICMgUnVuIHRoZSBHaXRIdWIgcnVubmVyIHNldHVwIHNjcmlwdA0KICAgIC0gY2hvd24gYXp1cmV1c2VyOmF6dXJldXNlciAvaG9tZS9henVyZXVzZXIvc2V0dXAtcnVubmVyLnNoDQogICAgLSBzdWRvIC11IGF6dXJldXNlciAvaG9tZS9henVyZXVzZXIvc2V0dXAtcnVubmVyLnNoDQoNCiAgICAjIENvbmZpZ3VyZSBmaXJld2FsbA0KICAgIC0gdWZ3IGFsbG93IDIyL3RjcA0KICAgIC0gdWZ3IGFsbG93ICR7YXBwX3NlcnZlcl9wb3J0fS90Y3ANCiAgICAtIHVmdyAtLWZvcmNlIGVuYWJsZQ0KDQogICAgIyBFbmFibGUgdGhlIHNlcnZpY2UgKGl0IHdpbGwgc3RhcnQgd2hlbiBmaWxlcyBhcmUgZGVwbG95ZWQpDQogICAgLSBzeXN0ZW1jdGwgZW5hYmxlIGRvdG5ldGFwcC5zZXJ2aWNlDQoNCiAgICAjIExvZyBjb21wbGV0aW9uDQogICAgLSBlY2hvICJBcHAgc2VydmVyIHNldHVwIHdpdGggR2l0SHViIHJ1bm5lciBjb21wbGV0ZSIgPj4gL3Zhci9sb2cvY2xvdWQtaW5pdC1vdXRwdXQubG9n"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "networkDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "11809725527216009803"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "NordicVNet",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "ReverseProxySubnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-ReverseProxy')]"
                      }
                    }
                  },
                  {
                    "name": "AppServerSubnet",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-AppSrv')]"
                      }
                    }
                  },
                  {
                    "name": "BastionHostSubnet",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-BastionHost')]"
                      }
                    }
                  },
                  {
                    "name": "StorageSubnet",
                    "properties": {
                      "addressPrefix": "10.0.4.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Storage')]"
                      }
                    }
                  },
                  {
                    "name": "DatabaseSubnet",
                    "properties": {
                      "addressPrefix": "10.0.5.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-CosmosDB')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-AppSrv')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-BastionHost')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-CosmosDB')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-ReverseProxy')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'NSG-Storage')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "NSG-ReverseProxy",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-HTTP-All",
                    "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ],
                      "description": "Allow HTTP/S"
                    }
                  },
                  {
                    "name": "Allow-SSH-Bastion",
                    "properties": {
                      "priority": 1100,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "10.0.3.0/24",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22",
                      "description": "Allow SSH from Bastion"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "NSG-AppSrv",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-HTTP-All",
                    "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "10.0.1.0/24",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "5000",
                      "description": "Allow HTTP from Reverse Proxy"
                    }
                  },
                  {
                    "name": "Allow-SSH-Bastion",
                    "properties": {
                      "priority": 1100,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "10.0.3.0/24",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22",
                      "description": "Allow SSH from Bastion"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "NSG-BastionHost",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-SSH-All",
                    "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "2222",
                      "description": "Allow SSH"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "NSG-Storage",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-HTTPS-All",
                    "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "10.0.2.0/24",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "description": "Allow HTTPS"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "NSG-CosmosDB",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-HTTPS-All",
                    "properties": {
                      "priority": 1000,
                      "direction": "Inbound",
                      "access": "Allow",
                      "protocol": "Tcp",
                      "sourceAddressPrefix": "10.0.2.0/24",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "description": "Allow HTTPS"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet')]"
            },
            "reverseProxySubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/ReverseProxySubnet', resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet'))]"
            },
            "appServerSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/AppServerSubnet', resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet'))]"
            },
            "bastionSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/BastionHostSubnet', resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet'))]"
            },
            "storageSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/StorageSubnet', resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet'))]"
            },
            "databaseSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/DatabaseSubnet', resourceId('Microsoft.Network/virtualNetworks', 'NordicVNet'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.vnetId.value]"
          },
          "storageSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.storageSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "2560911786953192872"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "storageSubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-08-01",
              "name": "clofresvaupg02",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny",
                  "virtualNetworkRules": [
                    {
                      "id": "[parameters('storageSubnetId')]",
                      "action": "Allow"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', 'clofresvaupg02', 'default')]",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', 'clofresvaupg02')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', 'clofresvaupg02', 'default', 'clofresvaupg02')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', 'clofresvaupg02', 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "clofresvaupg02"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', 'clofresvaupg02')]"
            },
            "connectionString": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', 'clofresvaupg02', listKeys(resourceId('Microsoft.Storage/storageAccounts', 'clofresvaupg02'), '2021-08-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmosDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.vnetId.value]"
          },
          "databaseSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.databaseSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "12048996666734945517"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "databaseSubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2022-05-15",
              "name": "CloFreSvaUpg02",
              "location": "[parameters('location')]",
              "kind": "MongoDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "North Europe",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  },
                  {
                    "locationName": "West Europe",
                    "failoverPriority": 1,
                    "isZoneRedundant": false
                  }
                ],
                "enableMultipleWriteLocations": true,
                "networkAclBypass": "AzureServices",
                "virtualNetworkRules": [
                  {
                    "id": "[parameters('databaseSubnetId')]",
                    "ignoreMissingVNetServiceEndpoint": false
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}', 'CloFreSvaUpg02', 'CloFreSvaUpg02DB')]",
              "properties": {
                "resource": {
                  "id": "CloFreSvaUpg02DB"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'CloFreSvaUpg02')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}/{2}', 'CloFreSvaUpg02', 'CloFreSvaUpg02DB', 'CloFreSvaUpg02Collection')]",
              "properties": {
                "resource": {
                  "id": "CloFreSvaUpg02Collection",
                  "shardKey": {
                    "id": "Hash"
                  },
                  "indexes": [
                    {
                      "key": {
                        "keys": [
                          "_id"
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', 'CloFreSvaUpg02', 'CloFreSvaUpg02DB')]"
              ]
            }
          ],
          "outputs": {
            "cosmosDbId": {
              "type": "string",
              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', 'CloFreSvaUpg02')]"
            },
            "cosmosDbName": {
              "type": "string",
              "value": "CloFreSvaUpg02"
            },
            "connectionString": {
              "type": "string",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', 'CloFreSvaUpg02'), '2022-05-15').connectionStrings[0].connectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "bastionDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.bastionSubnetId.value]"
          },
          "customData": {
            "value": "[variables('bastionCloudInit')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "14367924937532482915"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "sshPublicKey": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "customData": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "BastionPublicIP",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "bastionNic",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'BastionPublicIP')]"
                      },
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'BastionPublicIP')]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "BastionHostVM",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "osProfile": {
                  "computerName": "BastionHostVM",
                  "adminUsername": "[parameters('adminUsername')]",
                  "customData": "[parameters('customData')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "22_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'bastionNic')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'bastionNic')]"
              ]
            }
          ],
          "outputs": {
            "publicIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'BastionPublicIP'), '2021-05-01').ipAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "reverseProxyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.reverseProxySubnetId.value]"
          },
          "customData": {
            "value": "[variables('reverseProxyCloudInit')]"
          },
          "privateIpAddress": {
            "value": "[parameters('reverseProxyIp')]"
          },
          "appServerIp": {
            "value": "[parameters('appServerIp')]"
          },
          "appServerPort": {
            "value": "[parameters('appServerPort')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "14118640360411776486"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "sshPublicKey": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "customData": {
              "type": "string"
            },
            "privateIpAddress": {
              "type": "string"
            },
            "appServerIp": {
              "type": "string"
            },
            "appServerPort": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "ReverseProxyIP",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "reverseProxyNic",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "[parameters('privateIpAddress')]",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'ReverseProxyIP')]"
                      },
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'ReverseProxyIP')]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "ReverseProxyVM",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "osProfile": {
                  "computerName": "ReverseProxyVM",
                  "adminUsername": "[parameters('adminUsername')]",
                  "customData": "[parameters('customData')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "22_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'reverseProxyNic')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'reverseProxyNic')]"
              ]
            }
          ],
          "outputs": {
            "publicIp": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'ReverseProxyIP'), '2021-05-01').ipAddress]"
            },
            "privateIp": {
              "type": "string",
              "value": "[parameters('privateIpAddress')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServerDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "resourceGroupName": {
            "value": "[parameters('resourceGroupName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.appServerSubnetId.value]"
          },
          "customData": {
            "value": "[variables('appServerCloudInit')]"
          },
          "privateIpAddress": {
            "value": "[parameters('appServerIp')]"
          },
          "appServerPort": {
            "value": "[parameters('appServerPort')]"
          },
          "githubOrg": {
            "value": "[parameters('githubOrg')]"
          },
          "githubRepoName": {
            "value": "[parameters('githubRepoName')]"
          },
          "githubToken": {
            "value": "[parameters('githubToken')]"
          },
          "appName": {
            "value": "[parameters('appName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "12910303156240798956"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "sshPublicKey": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "customData": {
              "type": "string"
            },
            "privateIpAddress": {
              "type": "string"
            },
            "appServerPort": {
              "type": "string"
            },
            "githubOrg": {
              "type": "string"
            },
            "githubRepoName": {
              "type": "string"
            },
            "githubToken": {
              "type": "string"
            },
            "appName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-05-01",
              "name": "appServerNic",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "privateIPAddress": "[parameters('privateIpAddress')]",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-11-01",
              "name": "AppServerVM",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "osProfile": {
                  "computerName": "AppServerVM",
                  "adminUsername": "[parameters('adminUsername')]",
                  "customData": "[parameters('customData')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('sshPublicKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "22_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', 'appServerNic')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', 'appServerNic')]"
              ]
            }
          ],
          "outputs": {
            "privateIp": {
              "type": "string",
              "value": "[parameters('privateIpAddress')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]"
      ]
    }
  ],
  "outputs": {
    "bastionHostIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'bastionDeployment'), '2022-09-01').outputs.publicIp.value]"
    },
    "reverseProxyIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'reverseProxyDeployment'), '2022-09-01').outputs.publicIp.value]"
    },
    "appServerIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServerDeployment'), '2022-09-01').outputs.privateIp.value]"
    }
  }
}